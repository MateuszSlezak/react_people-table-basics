{"version":3,"sources":["components/Loader/Loader.tsx","api.ts","components/PeopleTable.tsx","App.tsx","index.tsx"],"names":["Loader","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeopleTable","personSlug","useParams","useState","isLoading","setIsLoading","people","setPeople","error","setError","peopleSuccessfulLoaded","length","noPeopleFound","useEffect","peopleFromServer","peopleWithParents","map","person","mother","find","p","name","motherName","father","fatherName","catch","finally","slug","to","sex","born","died","App","activeClass","isActive","classNames","role","path","element","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.68e161b7.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { NavLink, useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Loader } from './Loader';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\n\nexport const PeopleTable = () => {\n  const { personSlug } = useParams();\n\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [people, setPeople] = useState<Person[] | []>([]);\n  const [error, setError] = useState<boolean>(false);\n\n  const peopleSuccessfulLoaded = !error && people.length > 0 && !isLoading;\n  const noPeopleFound = !error && people.length === 0 && !isLoading;\n\n  useEffect(() => {\n    getPeople().then((peopleFromServer) => {\n      const peopleWithParents: Person[] = peopleFromServer.map(person => {\n        const mother = peopleFromServer\n          .find(p => p.name === person.motherName);\n        const father = peopleFromServer\n          .find(p => p.name === person.fatherName);\n\n        return { ...person, mother, father };\n      });\n\n      setPeople(peopleWithParents);\n    }).catch(() => {\n      setError(true);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n\n          {isLoading && <Loader />}\n          { !isLoading && error && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {noPeopleFound && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {peopleSuccessfulLoaded && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n\n                {people.map(person => (\n\n                  <tr\n                    data-cy=\"person\"\n                    className={person.slug === personSlug\n                      ? 'has-background-warning' : ''}\n                  >\n                    <td>\n                      <NavLink to={`/people/${person.slug}`} className={person.sex === 'f' ? 'has-text-danger' : ''}>\n                        {person.name}\n                      </NavLink>\n                    </td>\n\n                    <td>{person.sex}</td>\n                    <td>{person.born}</td>\n                    <td>{person.died}</td>\n                    {person.mother\n                      ? <td><NavLink to={`/people/${person.mother.slug}`} className=\"has-text-danger\">{person.motherName}</NavLink></td>\n                      : <td>{person.motherName ? person.motherName : '-'}</td>}\n\n                    {person.father\n                      ? <td><NavLink to={`/people/${person.father.slug}`}>{person.fatherName}</NavLink></td>\n                      : <td>{person.fatherName ? person.fatherName : '-'}</td>}\n                  </tr>\n                ))}\n\n              </tbody>\n            </table>\n          )}\n\n        </div>\n      </div>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport {\n  NavLink, Navigate, Route, Routes,\n} from 'react-router-dom';\nimport { PeopleTable } from './components/PeopleTable';\nimport './App.scss';\n\nexport const App = () => {\n  const activeClass = ({ isActive }: { isActive: boolean }) => {\n    return classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    );\n  };\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink className={activeClass} to=\"/\">\n              Home\n            </NavLink>\n\n            <NavLink\n              className={activeClass}\n              to=\"/people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n            <Route path=\"/people\" element={<PeopleTable />} />\n            <Route path=\"/people/:personSlug\" element={<PeopleTable />} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n\n          </Routes>\n\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}